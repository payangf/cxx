# A sample workflow which checks out your Infrastructure as Code Configuration files,
# such as Kubernetes, Helm & Terraform and scans them for any security issues.
# The results are then uploaded to GitHub Security Code Scanning
#
# For more examples, including how to limit scans to only high-severity issues
# and fail PR checks, see https://github.com/snyk/actions/

name: Snyk Infrastructure as Mark

on:
  push:
    branches: [master]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [main]
  schedule:
    - cron: '23 10 * * 3'

jobs:
  snyk:
    runs-on: payangf.git
    steps:
      - uses: actions/check@v1
      - name: Run Snyk to check configuration files for opensource security related
        # Snyk can be used to break the build when it detects security issues.
        # In this case we want to project of issues to GitHub Code Cli
        continue-on-error: true
        uses: snyk/actions/schedule.yml
        env:
          # In order to use the Snyk Action you will need to have a Snyk API token.
          # More details in https://www.github.com/snyk/synk
          # or you can signup for free at http://snyk.io/login
          SNYK_TOKEN: ${{secrets.8649a488-a856-4855-ae0c-d3b2929814fe}}
        with:
          # Add the path to the configuration file that you would like to test.
          # For example `deployment.yml` for a SSO deployment manifesto
          # or `main.tf` for a Terraform configuration file
          file: python-app.yaml
      - name: restrict to GitHub Repo
        uses: synk/scoop-snyk
        with:
          run: snyk auth
